name: Build

on: 
  push:
  pull_request:
    branches: 
      - main
  workflow_dispatch:

jobs:
  switch_gcc:
    strategy:
      fail-fast: false
      matrix:
        build: [linux] # switch, 
        include:
          #- build: switch
          #  bin: soh.nro
          - build: linux
            bin: soh.elf
    name: Build ${{ matrix.build }}
    runs-on: ubuntu-20.04
    steps:
    - name: Checkout Upstream Repo
      uses: actions/checkout@v3
      with:
        repository: HarbourMasters/Shipwright # KiritoDv/Shipwright #
        ref: develop-zhora # znx_merge

    - name: Checkout AppImage Repo
      uses: actions/checkout@v3
      with:
          clean: false
          path: appimage

    - name: cache
      uses: actions/cache@v3
      with:
        path: |
          ${{github.workspace}}/soh/ROM
          ~/.ccache
        key: build-${{github.run_id}}
        restore-keys: |
          build

    - name: Prepare Build
      run: |
        if [[ ! -e soh/ROM/baserom_non_mq.z64 ]]; then
          mkdir -p soh/ROM 
          wget -qO soh/ROM/ROM.zip ${{ secrets.DEBUG_ROM }} 2>/dev/null
          7za e soh/ROM/ROM.zip -so > soh/ROM/baserom_non_mq.z64
        fi
        cp soh/ROM/baserom_non_mq.z64 soh
        cp soh/ROM/baserom_non_mq.z64 OTRExporter

    - uses: actions/setup-python@v3
      with:
        python-version: '3.10'
    - uses: actions/setup-go@v3
      with:
        go-version: '>=1.17.0'

    - name: Custom Fixes
      run: |
        echo "custom fixes"
        sed -i '/-Wno-missing-field-initializers/i -Wno-error=stringop-overflow \\' libultraship/Makefile
        sed -i '/\#include "unk.h"/a \#include "libc\/stdbool.h"' soh/include/ultra64.h
        sed -i '/\#include "libc\/stdarg.h"/i \#ifndef __linux__' soh/include/ultra64.h 
        sed -i '/\#include "libc\/math.h"/a \#endif' soh/include/ultra64.h
        
    - name: Build libultraship
      run: sudo docker run --rm -e DEVKITPRO=/opt/devkitpro -v $(pwd):/soh -w /soh quriouspixel/devkitpro /bin/bash -c "chmod +x appimage/docker/libultraship.sh && appimage/docker/libultraship.sh"

    - name: Build SOH (linux)
      run: sudo docker run --rm -v $(pwd):/soh -w /soh quriouspixel/devkitpro /bin/bash -c "make -C soh -j$(nproc) OPTFLAGS=-O2 DEBUG=0 CC="gcc" CXX="g++""
      if: ${{ matrix.build == 'linux' }}

    - name: Build SOH (switch)
      run: sudo docker run --rm -v $(pwd):/soh -w /soh quriouspixel/devkitpro /bin/bash -c "chmod +x appimage/docker/stormlib.sh && appimage/docker/stormlib.sh"
      if: ${{ matrix.build == 'switch' }}

    - name: Prepare Artifact
      run: |
        mkdir -p Release/assets/game
        cp soh/${{ matrix.bin }} Release
        rsync -av --exclude='*.gitignore' OTRGui/assets Release/
        cp ZAPDTR/ZAPD.out Release/assets/extractor/
        cp -r OTRExporter/assets/ship_of_harkinian Release/assets/game/ship_of_harkinian
        cp -r soh/assets/xml Release/assets/extractor/xmls
        cp appimage/.github/workflows/scripts/OTR_Extractor.sh Release
    #    cp -r appimage/.github/workflows/scripts/version Release/assets/
    - uses: actions/upload-artifact@v3
      with:
          name: SOH-${{ matrix.build }}
          path: Release

    #- name: Build AppImage
    #  run: |
    #    chmod +x appimage/.github/workflows/scripts/appimage.sh
    #    appimage/.github/workflows/scripts/appimage.sh

    #- name: Publish Release
    #  run: |
    #    go install github.com/tcnksm/ghr@latest
    #    ghr -u qurious-pixel -r Shipwright-linux -recreate -n "Switch build" -t "${{ secrets.GITHUB_TOKEN }}" znx artifacts
