name: Build

on: 
  push:
  pull_request:
    branches: 
      - main
  workflow_dispatch:

jobs:
  linux_gcc:
    strategy:
      fail-fast: false
      matrix:
        compiler: [clang]
        arch: ["x86_64"] # "arm64", 
    name: Build MacOS ${{ matrix.arch }}
    runs-on: macos-10.15
    steps:
    - name: Checkout Upstream Repo
      uses: actions/checkout@v3
      with:
        repository: HarbourMasters/Shipwright # dcvz/Shipwright # briaguya-ai/Shipwright #  
        ref: develop-zhora # develop-rachael #

    - name: Checkout AppImage Repo
      uses: actions/checkout@v3
      with:
          clean: false
          path: ci

    - name: cache
      uses: actions/cache@v3
      with:
        path: |
          ${{github.workspace}}/soh/ROM
          ~/.ccache
        key: build-${{github.run_id}}
        restore-keys: |
          build

    - name: Prepare Build
      run: |
        if [[ ! -e soh/ROM/baserom_non_mq.z64 ]]; then
          mkdir -p soh/ROM 
          wget -qO soh/ROM/ROM.zip ${{ secrets.DEBUG_ROM }} 2>/dev/null
          7za e soh/ROM/ROM.zip -so > soh/ROM/baserom_non_mq.z64
        fi
        cp soh/ROM/baserom_non_mq.z64 soh
        cp soh/ROM/baserom_non_mq.z64 OTRExporter

   
    - name: Install Dependencies
      run: brew install sdl2 glew dylibbundler ccache
        
    - uses: actions/setup-python@v3
      with:
        python-version: '3.10'
    - uses: actions/setup-go@v3
      with:
        go-version: '>=1.17.0'

    - name: Build SOH
      run: |
        make setup -C soh -j4 OPTFLAGS=-O2 DEBUG=0 CC="${{ matrix.compiler }} -arch ${{ matrix.arch }}" CXX="${{ matrix.compiler }}++ -arch ${{ matrix.arch }}" LD="ld"
        make -C soh -j4 OPTFLAGS=-O2 DEBUG=0 CC="${{ matrix.compiler }} -arch ${{ matrix.arch }}" CXX="${{ matrix.compiler }}++ -arch ${{ matrix.arch }}" LD="ld"
        make appbundle -C soh -j4 CC="${{ matrix.compiler }} -arch ${{ matrix.arch }}" CXX="${{ matrix.compiler }}++ -arch ${{ matrix.arch }}" LD="ld"

    - name: Ccache stats
      run: ccache -s

    - name: Prepare Artifact
      run: |
        mkdir Release
        cp soh/soh.app Release
    #    cp OTRGui/build/OTRGui Release
    #    rsync -av --exclude='*.gitignore' OTRGui/build/assets Release/
    #    cp ZAPDTR/ZAPD.out Release/assets/extractor/
    #    cp appimage/.github/workflows/scripts/OTR_Extractor.sh Release
    - uses: actions/upload-artifact@v3
      with:
          name: SOH-MacOS-${{ matrix.arch }}
          path: Release
   
    #- name: Publish Release
    #  run: |
    #    go install github.com/tcnksm/ghr@latest
    #    ghr -u qurious-pixel -r Shipwright-linux -recreate -n "AppImage 64bit build" -t "${{ secrets.GITHUB_TOKEN }}" zelda64 artifacts
